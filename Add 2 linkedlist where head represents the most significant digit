#include<bits/stdc++.h>
using namespace std;
struct node
{
    int data;
    node *next;
};
node* add(node *head1,node *head2,int &carry)
{
    if(head1==0 && head2==0)
    {
        return 0;
    }
    node *newhead=add(head1->next,head2->next,carry);
    int sum=head1->data +head2->data + carry;
    if(sum > 9)
    {
        carry=sum/10;
        sum=sum%10;
    }
    else { carry=0; }
    node *newnode=(node*)malloc(sizeof(node));
    newnode->data=sum;
    newnode->next=newhead;
    newhead=newnode;
    return newhead;
}
void addremaining(node **newhead, node *head,node *cur, int &carry)
{
    if(head==cur){ return ; }
    addremaining(newhead,head->next,cur,carry);
    node *newnode=(node*)malloc(sizeof(node));
    int sum=head->data+carry;
    if(sum > 9)
    {
        carry=sum/10;
        sum=sum%10;
    }
    else { carry=0; }
    newnode->data=sum;
    newnode->next=*newhead;
    *newhead=newnode;
}
int main()
{
    int num1,num2,sum,carry=0,k,size1=0,size2=0,i;
    cin >> num1>> num2;
    node *head1=0,*head2=0,*cur;
    while(num1)
    {
        k=num1%10;
        num1=num1/10;
        node *newnode=(node*)malloc(sizeof(node));
        newnode->data=k;
        newnode->next=head1;
        head1=newnode;
        size1++;
    }
    while(num2)
    {
        k=num2%10;
        num2=num2/10;
        node *newnode=(node*)malloc(sizeof(node));
        newnode->data=k;
        newnode->next=head2;
        head2=newnode;
        size2++;
    }
    int diff=abs(size1-size2);
    if(size1<size2){ swap(head1,head2); }
    cur=head1;
    for(i=0;i<diff;i++){ cur=cur->next; }
    node *newhead=0;
    newhead=add(cur,head2,carry);
    addremaining(&newhead,head1,cur,carry);
    if(carry!=0)
    {
        node *newnode=(node*)malloc(sizeof(node));
        newnode->data=carry;
        newnode->next=newhead;
        newhead=newnode;
    }
    while(newhead)
    {
        cout << newhead->data;
        newhead=newhead->next;
    }
    return;
}
