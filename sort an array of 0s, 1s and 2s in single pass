https://www.geeksforgeeks.org/sort-an-array-of-0s-1s-and-2s/
Given an array A of size N containing 0s, 1s, and 2s; you need to sort the array in ascending order.

Input:
The first line contains an integer 'T' denoting the total number of test cases. Then T testcases follow. Each testcases contains two lines of input. The first line denotes the size of the array N. The second lines contains the elements of the array A separated by spaces.

Output: 
For each testcase, print the sorted array.

Constraints: 
1 <= T <= 500
1 <= N <= 106
0 <= Ai <= 2

Example:
Input :
2
5
0 2 1 2 0
3
0 1 0

Output:
0 0 1 2 2
0 0 1

#solution

#include<bits/stdc++.h>
using namespace std;
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int n;
        cin >> n;
        int a[n],s,e,i,j;
        for(i=0;i<n;i++){cin >> a[i]; }
        i=0,s=0,e=n-1;
       
        while(i<=e)
        {
            if(a[i]==0)
            {
                swap(a[s],a[i]);
                s++,i++;
            }
            else if(a[i]==2 )
            {
                swap(a[e],a[i]);
                while(a[e]==2 && e>0){ e--; }
            }
            else
            {
                i++;
            }
        }
        for(i=0;i<n;i++){ cout << a[i]<<" "; }
        cout << endl;
    }
    return 0;
}
