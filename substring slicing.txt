You are given a string . Now, you can cut the string into two parts such that each part is the substring of the string  and is non-empty. Now, you can form a new string by arranging these two parts in any order. Print YES if it is possible to cut the string into two parts and then rearrange them to form a palindrome otherwise print NO.

Input Format
The first line contains an integer  that denote the total number of test cases.
The first line of each test case contains a string .

Output Format
For each test case, print YES  or NO in a new line.

Constraints

Sample Input
2
abbavv
apple
Sample Output
YES
NO
Explanation
Sample test case : Choose the first substring as abbav and second substring as v. Now, you arrange them as v + abbav that will form the string vabbav which is a palindrome.

#SOLUTION

#include<bits/stdc++.h>
using namespace std;
bool ispalindrome(string s,int b,int l)
{
    bool flag=1;
    while(b<=l)
    {
        if(s[b]!=s[l])
        {
            flag=0;
            return false;
        }
        else
        {
            l--,b++;
        }
    }
    return true;
}
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        int i,j,k,a[256],start,last;
        string s;
        cin >> s;
        for(i=0;i<256;i++){ a[i]=0;  }
        int n=s.length();
        for(i=0;i<n;i++)
        {
            a[(int)s[i]]++;
        }
        j=0;
        for(i=0;i<256;i++)
        {
            if(a[i]%2==1){ j++;}
        }
        if(j<=1)
        {
            if(ispalindrome(s,0,n-1))
            {
                cout <<"YES"<<endl;
            }
            else
            {
                last=n-2;
                while(last>=0)
                {
                    if(ispalindrome(s,0,last) && ispalindrome(s,last+1,n-1))
                    {
                        if((last+1)%2==1 &&(n-last-1)%2==1 )
                        {
                            cout <<"NO"<<endl;
                        }
                        else
                        {
                            cout <<"YES"<<endl;
                        }
                        break;
                    }
                    else
                    {
                        last--;
                    }
                }
                if(last==-1)
                {
                    cout <<"NO"<<endl;
                }
            }
        }
        else
        {
            cout <<"NO"<<endl;

        }
     }
}
