https://practice.geeksforgeeks.org/problems/longest-common-prefix-in-an-array/0

#include<bits/stdc++.h>
using namespace std;
struct trie{
    trie *child[26];
    bool isend;
};
trie* gettrienode()
{
    trie *newnode=(trie*)malloc(sizeof(trie));
    for(int i=0;i<26;i++)
    {
        newnode->child[i]=0;
    }
    newnode->isend=0;
    return newnode;
}
void insert(string s,trie *trieroot)
{
    int i,n=s.length();
    trie *p=trieroot;
    for(i=0;i<n;i++)
    {
        int k=(int)s[i]-97;
        if(p->child[k]==0)
        {
            p->child[k]=gettrienode();
            p=p->child[k];
            if(i==n-1){ p->isend=1; }
        }
        else
        {
            p=p->child[k];
            if(i==n-1)
            {
                p->isend=1;
            }
        }
    }
}
int countchild(trie *p)
{
    int i,n=0;
    for(i=0;i<26;i++)
    {
        if(p->child[i]!=0){ n++; }
    }
    return n;
}
string findcommonprefix(trie *trieroot)
{
    string ans;
    trie *p=trieroot;
    while(p!=0 && countchild(p)==1)
    {
        for(int i=0;i<26;i++)
        {
            if(p->child[i]!=0)
            { 
                ans.push_back('a'+i);
                p=p->child[i];
                break;
            }
        }
        if((p!=0 && p->isend==1 )||p==0 )
        {
            return ans; 
        }
    }
}
int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        trie *trieroot=gettrienode();
        int n,i,j,k;
        cin >> n;
        string s;
        for(i=0;i<n;i++)
        { 
            cin >> s;
            insert(s,trieroot);
        }
        string ans=findcommonprefix(trieroot);
        if(ans.length()==0){ cout<<"-1"<<endl; }
        else{ cout << ans<<endl; }
        
    }
}
